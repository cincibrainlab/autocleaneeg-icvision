[tox]
envlist = py38, py39, py310, py311, py312, lint
isolated_build = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.11: lint  # Run linting on a recent Python version

[testenv]
# Install pytest and other testing dependencies
deps =
    pytest>=7.0
    pytest-cov>=3.0
    # Add other test-specific dependencies if any, e.g., MNE, NumPy, Pandas for tests
    mne>=1.0
    numpy>=1.20
    pandas>=1.3
    openai>=1.0
    # Scipy is often a hidden dependency for MNE or plotting
    scipy>=1.7
    matplotlib>=3.5
    scikit-learn>=1.0
    pytest-mock>=3.5 # For mocking API calls
passenv = OPENAI_API_KEY_DUMMY # Allow OPENAI_API_KEY to be passed to test environment

commands =
    pytest tests/ --cov=src/icvision --cov-report=xml --cov-report=term-missing

[testenv:lint]
basepython = python3.11 # Use a specific recent Python for linting consistency
deps =
    flake8>=7.0
    black>=24.0
    isort>=5.12
    mypy>=1.0
    # bandit  # Uncomment if using bandit for security checks
    # pydocstyle # Uncomment if using pydocstyle

commands =
    flake8 src/icvision tests/
    black --check --diff src/icvision tests/
    isort --check-only --diff src/icvision tests/
    mypy src/icvision/
    # bandit -r src/icvision -s B101 # Example bandit command
    # pydocstyle src/icvision/ # Example pydocstyle command

[flake8]
max-line-length = 120
# Compatibility with Black
extend-ignore = E203, W503
# Exclude config.py from line length checks due to long OpenAI prompt
per-file-ignores = 
    src/icvision/config.py:E501

# MyPy can also be configured here if needed, though CLI args in testenv:lint are often sufficient
# [mypy]
# ignore_missing_imports = True
# python_version = 3.8 # or specific target version

[testenv:type]
deps = 
    mypy>=1.0.0
    types-all
commands = 
    mypy src/

[testenv:docs]
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=1.0.0
changedir = docs
commands = 
    sphinx-build -W -b html -d _build/doctrees . _build/html

[testenv:coverage]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    coverage[toml]>=7.0.0
commands = 
    pytest --cov=your_package --cov-report=html --cov-report=xml --cov-report=term
    coverage report --show-missing --fail-under=90

# Coverage configuration
[coverage:run]
source = your_package
branch = True
omit = 
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug:
    if settings\.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
precision = 2
show_missing = True

# isort configuration
[tool:isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = your_package

# pytest configuration  
[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    -ra
    --cov-branch
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests 